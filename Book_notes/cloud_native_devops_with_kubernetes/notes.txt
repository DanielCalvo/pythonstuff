Chapter 1: Revolution in the Cloud

Author says there are three revolutions going on:
- The creation of the cloud
- The dawn of DevOps
- The coming of containers

When you use the cloud to run your own services, what you're buying is Infrastructure as a service.
But outsourcing hardware is only part of the story: You can outsource software too: Operating systems, databases, clustering, networking. Managed services can do most of the heavy lifting for you.


Chapter 2: First steps with Kubernetes
Just a refresher course. A bunch of stuff I'm already familiar with.


Chapter 3: Getting Kubernetes
Cluster architecture:
The control plane: Schedules containers, manages services, serves API requests and so on. It's actually made of several components:
kube-apiserver. The frontend server for the control plane, handling API requests
etcd: Kubernetes information database, which nodes exist, what resources exist on the cluster and so on
kube-scheduler: Decides where to run new pods
kube-control-manager: Responsible for running resource controllers such as deployments
cloud-controller-manager: Interacts with the cloud provider managing resources such as load balancers and disk volumes

Node components:
kubelet: Drives the container runtime to start workloads that are scheduled to start on the node
kube-proxy: Does networking magic that routes traffic between pods and the internet
Container runtime: What runs the containers, usually Docker.

There are a bunch of ways to run Kubernetes on premises.
Use managed kubernetes if you can.

Cloud native is not a cloud provider, it’s not Kubernetes, it’s not containers, it’s
not a technology. It’s the practice of accelerating your business by not running
stuff that doesn’t differentiate you.
—Justin Garrison


Chapter 4: Kubernetes objects
Deployment: Supervised pods to make sure they're running and/or running with certain characteristics
Pod: One or more container
ReplicaSet: Used by deployments. You usually don't interact with this directly






You stopped on page 53