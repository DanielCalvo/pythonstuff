
- General notes -
11:
Does a dedicated EC2 instance mean you can launch many VMs on a single host that you have, while a physical dedicated EC2 instance means you get an entire server for a single instance?

12:
Play around with spot requests

21:
Review EC2 creation errors

4. Section introduction
AMIs are really asked at the exam!
- General notes -


5. Launching an EC2 instance:
Launched instance through the UI, sshed into it.
ssh ec2-user@34.245.49.104


6. Changing EC2 instance type:
Only works for EBS backed instances
Stop the instance. You can then right click on the instance and instance settings > change instance type.
You can log in into the instance and see that your files are there and you have more memory and what not


7. EC2 Placement Groups
You can specify how you want your EC2 instances to be placed. The strategies are:

Cluster: Clusters instances in a low-latency group inside a single availability zone (fast, but risky).
Same rack, same AZ.
Pro: Great network (10gbps)
Con: If rack fails, all instances fail at the same time
Use case: Application that needs low latency and high network throughput (like a big data job)

Spread: Spreads instances across underlying hardware (max 7 instances per group per AZ)
Pros: Can span across Availability zones (AZ), reduced risk of simultaneous failure, EC2 instances are on separate hardware.
Cons: Limited to 7 instances per AZ per placement group
Use case: Application that needs to maximize high availability, critical applications in which each instance must be isolated from failure

Partition: Spreads instances across many different partitions (different sets of racks) within an AZ. Scales to 100s of EC2 instances per group.
Partitions are a set of racks, on each partition you're going to have sets of EC2 instances.
Use cases: Distributed big data applications

Creating a placement group: On the EC2 dashboard, on the left:
Network and Security -> Placement groups

When you create an EC2 instance, you then choose which placement group you want.


8. EC2 Shutdown behaviour and termination protection
How to react when an instance is shut down using the OS?
This is only from the OS. Does not apply when done from the console or API
By default: Stopped
But you can also make it be terminated.

Termination Protection: To protect against accidental termination in the AWS Console or CLI

Exam tip: If you have an instance where shutdown behaviour = terminate and enable termination protection, what happens if you shutdown the instance from the OS?
It still terminates.

Default shutdown behaviour is to stop, though we can also set it to terminate.

You can't terminate an instance with Termination protection enabled. You have to first disable termination protection, then you can terminate the instance.
You can change shutdown behaviour by going on an instance setting and changing it.


09: Troubleshooting EC2 launch issues
Author says: Lecture is important, there are tons of questions on why you can't launch an EC2 instance.

InstanceLimitExceeded error: This means you've reached your maximum number of instances per reagion.
Resolution: Either launch the instance in a different region or request AWS to raise the limit for you.
Default number of instances in each region: 20

On the EC2 console, on the left side there's a limit section. You can see your limits there.

InsufficientInstanceCapacity: AWS does not have that much on demand capacity in that particular AZ to launch the instance(s) you want.
Resolution: Wait a few minutes before trying again.
Or maybe try to break down the requests (ask for 1 instance 5 times instead of 5 instances at once)
If urgent, maybe create an instance of a smaller type and try to increase it's size later.

If instances terminates immediately (goes from pending to terminated). Possible reasons:
- You reached your EBS volume limit
- An EBS snapshot is corrupt
- The root EBS volume is encrypted and you do not have permissions to access the key for decription
- The instance store-backed AMI that you used to launch the instance is missing a required part

To find the exact reason, there's a description tab on EC2 instances with a "state transition reason" and "State transition reason message"
You can also check these when you click over an EC2 instance and it shows up on screen on the bottom part.


10: Troubleshooting EC2 SSH issues
- Make sure that the private key as 400 permissions ontherwise you'll get the "unprotected private key file" error
- Make sure the correct username for the OS is used.

If you get a timeout:
- Usually a security group issue or
- CPU usage is so high that you can't log in


11: EC2 Instance launch types
EC2 on demand:
- Pay for what you use
- Highest cost, but no upfront payment
- No long term commitment.
Recommended for shor term, uninterrupted workloads in which you can't predict what's gonna happen in the future (if the instance is gonna stay there forever or not)

EC2 reserved instances:
- Up to 75% discount compared to on-demand
- Pay upfront for what you use with long term commitment
- Reservation period can be 1 year or 3 years
- Reserve a specific instance type
Recommended for steady usage applications (like a database for instance)

There's a variation of this called Convertible Reserved Instance
- You can change the EC2 instance type
- But the discount is only up to 54%

There are also scheduled reserved instances
- Launch a given instance within a time window that you reserve

EC2 spot instances:
- Can get a discount of up to 90% compared to on demand
- You bid a price and get the instance as long as it is under the price
- Price varies based on offer and demand
- Spot instances are reclaimed with a 2 minute notification warning when the spot price goes above your bid
- Useful for batch jobs, big data analysis and work loads that are resilient to failure

EC2 dedicated hosts:
- Physical dedicated EC2 server for you to use!
- Full control of EC2 instance placement
- Visibility into the underlying physical cores of the hardware
- Allocated for 3 years
- Expensive! But you control the hardware in some ways.

Useful for software that bills you based on number of cores.
Or companies that face certain regulatory / compliance needs

EC2 dedicated instances:
- Instances running on hardware that's dedicated to you
- May share hardware with other instances in the same account
- No control over instance placement


12. EC2 launch modes hands on:
You can search for reserved instances on Amazon's EC2 panel on the left
Same for allocating hosts
Same for scheduled instances
Spot instances and tenancy options can be found when creating a normal EC2 instance as well

For spot instances your request can be persistent and you can establish a date range for it. Pretty cool


13: EC2 instances deep dive
R: Applications that need a lot of ram, such as in memory caches
C: Apps that use CPU, compute/databases
M: Balanced, think general/web app
I: I/O focused (dbs)
G: GPU. Video rendering / machine learning
T2/T3: Burstable instances (up to a capacity)
T2/T3: unlimited: Unlimited burst.

Suggested by the author: https://ec2instances.info/

Burst mean that the instance can burst CPU usage for extra processing, but only for a limited amount of time. You regain "burst credit" over time.
In CloudWatch you can see your burst usage / credits

On T2/T3 unlimited you have "unlimited burst", you can pay more for these and you never have performance penalties. It can be expensive however.


14: EC2 AMIs.
You can create a custom AMI! With pre-installed packages and any other thing you might need.
Remember: AMIs are build for a specific AWS region!
You can also use or buy AMIs from other people.
When you create an AMI it resides in S3. By default all AMIs are private.


15: EC2 AMIs hands on:
Launch an EC2 instance, do whatever you want on it (like install apache with a hello world through web)
Right click on your running instance > image > create image
Once created, you can go on the AMI menu and "Copy AMI" to a different region. A given AMI is locked to a given region.
You an also modify the image permissions, de-register it or remove it.


16: Cross account AMI Copy
You can share an AMI with another AWS account, this does not affect the ownership of the AMI
If you copy an AMI that has been shared, you then become the owner of that AMI.
You can't copy an encrypted AMI that was shared with you from another account. If the underlying snapshot and encryption key were shared with you, you can copy the snapshop and re-encrypt it with a key of your own
You can't directly copy an AMI with an associated billingProduct code that was shared with you.
To copy a shared AMI with a billingProduct code, you must launch an EC2 instance and then create an AMI from that instance.

You can right click any given AMI and make it public, and you can share with privately with a given account number.


17: Elastic IPs
When you stop and you start an EC2 instance, it changes its public IP.
If you need to have a fixed public IP, you need an elastic IP.
You can attach it to a given instance, and you can remap it across instances.
You don't pay for the elastic IP if it's attached to a server, but you do pay it it's not attached.

With an elastic IP address, you can mask the failure of an instance or software by rapidly remapping the address to another instance in your account.
You can only have 5 elastic IPs by default but you can ask for an increase.

Overall, author recommends trying to avoid using elastic IPs.

You can go on the Elastic IP tab and easily create an elastic IP. You can then, right click on an elastic IP and associate it with an instance. This instance will have the elastic IP.
You can disassociate the IP from one machine and associate it to another one in the elastic IP menu.


18: CloudWatch metrics for EC2
You have basic monitoring (default), metrics that are collected at 5 minutes intervals. These are free.
Details monitoring is paid and collected at 1 minute intervals
You can also have custom metrics! Make sure that your EC2 instance has permissions for that on the role

EC2 included metrics:
CPU: Utilization + credit usage / balance for burst instances
Network: in/out
Status check: Instance status, checks the EC2 VM. System status: Checks the underlying hardware.
Disk: Read/Write for Ops / Bytes (only for instance store backed instances?)
Ram: Not included in the AWS EC2 metrics! AWS doesn't push it into CloudWatch :o

To enable detailed monitoring: Right clich EC2 instance > CloudWatch Monitoring > Enable detailed monitoring


19: EC2 custom metrics
Ram, Swap, or any custom metrics from your app!
Yay let's get a script to push ram as a custom metric!
You need to create an IAM role with appropriate cloudwatch metrics to be able to push metrics from the instance into cloudwatch


20: CloudWatch Logs for EC2
By default, no logs from your EC2 instance will go to cloudwatch
You need to run a cloudwatch agent on EC2 to push the logfiles to cloudwatch
You need to make sure you have the correct permissions to push logs to cloudwatch!
The cloudwatch log agent can be set up on premise too

You install awslogsd and you can then check log metrics in cloudwatch. Cool!


21: EC2 quiz:
1. To change the EC2 instance type, you need to stop the instance first, then change type, then start it again
2. To make sure your instances have the maximum network performance, launch them in cluster mode
3. Even if shutdown protection is enabled, if you shut down an instance from the OS using shutdown and the shutdown behaviour is set to terminate, the instance will terminate!
4. The InsufficientInstanceCapacity error means AWS does not have enough on-demand capacity regarding your particular AZ
5. On start up, if an instance goes from pending to terminating, your issue is NOT the per region limit on your account (could be EBS volume limit, corrupted EBS snapshot or an encrypted EBS volume that you don't have the key for)
6. If you're going to run an instance for a year, consider running a reserved instance, it will be cheaper!
7. If you're running out of CPU credits on a t2.small, you cannot purchase CPU credits manually. You can turn to t2 unlimited, upgrade to t2.medium or higher, or upgrade to a non t* instance.
8. AMIs are by default region locked!
9. If an AMI has a billingProduct code, you can only clone it by launching an EC2 instance and then creating an AMI from that instance.
10. RAM needs to be passed as a custom metric for cloudwatch