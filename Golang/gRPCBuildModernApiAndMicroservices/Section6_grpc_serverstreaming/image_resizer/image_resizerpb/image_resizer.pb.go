// Code generated by protoc-gen-go. DO NOT EDIT.
// source: Section6_grpc_serverstreaming/image_resizer/image_resizerpb/image_resizer.proto

package image_resizerpb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ImgRequest struct {
	Img                  []byte   `protobuf:"bytes,1,opt,name=Img,proto3" json:"Img,omitempty"`
	ImgName              string   `protobuf:"bytes,2,opt,name=ImgName,proto3" json:"ImgName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ImgRequest) Reset()         { *m = ImgRequest{} }
func (m *ImgRequest) String() string { return proto.CompactTextString(m) }
func (*ImgRequest) ProtoMessage()    {}
func (*ImgRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7e5ebdcb4110f133, []int{0}
}

func (m *ImgRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImgRequest.Unmarshal(m, b)
}
func (m *ImgRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImgRequest.Marshal(b, m, deterministic)
}
func (m *ImgRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImgRequest.Merge(m, src)
}
func (m *ImgRequest) XXX_Size() int {
	return xxx_messageInfo_ImgRequest.Size(m)
}
func (m *ImgRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ImgRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ImgRequest proto.InternalMessageInfo

func (m *ImgRequest) GetImg() []byte {
	if m != nil {
		return m.Img
	}
	return nil
}

func (m *ImgRequest) GetImgName() string {
	if m != nil {
		return m.ImgName
	}
	return ""
}

type ImgResponse struct {
	Img                  []byte   `protobuf:"bytes,1,opt,name=Img,proto3" json:"Img,omitempty"`
	ImgName              string   `protobuf:"bytes,2,opt,name=ImgName,proto3" json:"ImgName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ImgResponse) Reset()         { *m = ImgResponse{} }
func (m *ImgResponse) String() string { return proto.CompactTextString(m) }
func (*ImgResponse) ProtoMessage()    {}
func (*ImgResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7e5ebdcb4110f133, []int{1}
}

func (m *ImgResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImgResponse.Unmarshal(m, b)
}
func (m *ImgResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImgResponse.Marshal(b, m, deterministic)
}
func (m *ImgResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImgResponse.Merge(m, src)
}
func (m *ImgResponse) XXX_Size() int {
	return xxx_messageInfo_ImgResponse.Size(m)
}
func (m *ImgResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ImgResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ImgResponse proto.InternalMessageInfo

func (m *ImgResponse) GetImg() []byte {
	if m != nil {
		return m.Img
	}
	return nil
}

func (m *ImgResponse) GetImgName() string {
	if m != nil {
		return m.ImgName
	}
	return ""
}

func init() {
	proto.RegisterType((*ImgRequest)(nil), "image_resizerpb.ImgRequest")
	proto.RegisterType((*ImgResponse)(nil), "image_resizerpb.ImgResponse")
}

func init() {
	proto.RegisterFile("Section6_grpc_serverstreaming/image_resizer/image_resizerpb/image_resizer.proto", fileDescriptor_7e5ebdcb4110f133)
}

var fileDescriptor_7e5ebdcb4110f133 = []byte{
	// 197 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xf2, 0x0f, 0x4e, 0x4d, 0x2e,
	0xc9, 0xcc, 0xcf, 0x33, 0x8b, 0x4f, 0x2f, 0x2a, 0x48, 0x8e, 0x2f, 0x4e, 0x2d, 0x2a, 0x4b, 0x2d,
	0x2a, 0x2e, 0x29, 0x4a, 0x4d, 0xcc, 0xcd, 0xcc, 0x4b, 0xd7, 0xcf, 0xcc, 0x4d, 0x4c, 0x4f, 0x8d,
	0x2f, 0x4a, 0x2d, 0xce, 0xac, 0x4a, 0x2d, 0x42, 0xe5, 0x15, 0x24, 0xa1, 0xf2, 0xf5, 0x0a, 0x8a,
	0xf2, 0x4b, 0xf2, 0x85, 0xf8, 0xd1, 0x14, 0x29, 0x59, 0x70, 0x71, 0x79, 0xe6, 0xa6, 0x07, 0xa5,
	0x16, 0x96, 0xa6, 0x16, 0x97, 0x08, 0x09, 0x70, 0x31, 0x7b, 0xe6, 0xa6, 0x4b, 0x30, 0x2a, 0x30,
	0x6a, 0xf0, 0x04, 0x81, 0x98, 0x42, 0x12, 0x5c, 0xec, 0x9e, 0xb9, 0xe9, 0x7e, 0x89, 0xb9, 0xa9,
	0x12, 0x4c, 0x0a, 0x8c, 0x1a, 0x9c, 0x41, 0x30, 0xae, 0x92, 0x25, 0x17, 0x37, 0x58, 0x67, 0x71,
	0x41, 0x7e, 0x5e, 0x71, 0x2a, 0x29, 0x5a, 0x8d, 0x42, 0xc1, 0x96, 0x06, 0xa7, 0x16, 0x95, 0x65,
	0x26, 0xa7, 0x0a, 0xb9, 0x73, 0xb1, 0x05, 0x81, 0xdd, 0x23, 0x24, 0xad, 0x87, 0xe6, 0x3c, 0x3d,
	0x84, 0xdb, 0xa4, 0x64, 0xb0, 0x4b, 0x42, 0xac, 0x57, 0x62, 0x30, 0x60, 0x74, 0x12, 0x8c, 0x42,
	0xf7, 0x5e, 0x12, 0x1b, 0xd8, 0xdb, 0xc6, 0x80, 0x00, 0x00, 0x00, 0xff, 0xff, 0x88, 0x93, 0xa3,
	0xa0, 0x49, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ImgServiceClient is the client API for ImgService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ImgServiceClient interface {
	// Server Stream
	Resize(ctx context.Context, in *ImgRequest, opts ...grpc.CallOption) (ImgService_ResizeClient, error)
}

type imgServiceClient struct {
	cc *grpc.ClientConn
}

func NewImgServiceClient(cc *grpc.ClientConn) ImgServiceClient {
	return &imgServiceClient{cc}
}

func (c *imgServiceClient) Resize(ctx context.Context, in *ImgRequest, opts ...grpc.CallOption) (ImgService_ResizeClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ImgService_serviceDesc.Streams[0], "/image_resizerpb.ImgService/Resize", opts...)
	if err != nil {
		return nil, err
	}
	x := &imgServiceResizeClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type ImgService_ResizeClient interface {
	Recv() (*ImgResponse, error)
	grpc.ClientStream
}

type imgServiceResizeClient struct {
	grpc.ClientStream
}

func (x *imgServiceResizeClient) Recv() (*ImgResponse, error) {
	m := new(ImgResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// ImgServiceServer is the server API for ImgService service.
type ImgServiceServer interface {
	// Server Stream
	Resize(*ImgRequest, ImgService_ResizeServer) error
}

// UnimplementedImgServiceServer can be embedded to have forward compatible implementations.
type UnimplementedImgServiceServer struct {
}

func (*UnimplementedImgServiceServer) Resize(req *ImgRequest, srv ImgService_ResizeServer) error {
	return status.Errorf(codes.Unimplemented, "method Resize not implemented")
}

func RegisterImgServiceServer(s *grpc.Server, srv ImgServiceServer) {
	s.RegisterService(&_ImgService_serviceDesc, srv)
}

func _ImgService_Resize_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ImgRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ImgServiceServer).Resize(m, &imgServiceResizeServer{stream})
}

type ImgService_ResizeServer interface {
	Send(*ImgResponse) error
	grpc.ServerStream
}

type imgServiceResizeServer struct {
	grpc.ServerStream
}

func (x *imgServiceResizeServer) Send(m *ImgResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _ImgService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "image_resizerpb.ImgService",
	HandlerType: (*ImgServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Resize",
			Handler:       _ImgService_Resize_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "Section6_grpc_serverstreaming/image_resizer/image_resizerpb/image_resizer.proto",
}
